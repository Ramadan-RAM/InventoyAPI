// <auto-generated />
using System;
using AngularERPApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AngularERPApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220402214417_InitialSp_Acounts")]
    partial class InitialSp_Acounts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularERPApi.Models.Ads", b =>
                {
                    b.Property<int>("AdsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("AdsId");

                    b.ToTable("Ads", "dbo");
                });

            modelBuilder.Entity("AngularERPApi.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AngularERPApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AngularERPApi.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryAbbr")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.HasKey("CountryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("AngularERPApi.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CurrencyEqual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency", "dbo");
                });

            modelBuilder.Entity("AngularERPApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mobaile")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("AngularERPApi.Models.CustomerAccount", b =>
                {
                    b.Property<int>("CustomerAccuntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePayed")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<decimal>("PayedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CustomerAccuntId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAccount");
                });

            modelBuilder.Entity("AngularERPApi.Models.CustomerType", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerType");
                });

            modelBuilder.Entity("AngularERPApi.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("DepartmentAbbr")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("AngularERPApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("EmployeeResum")
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)");

                    b.Property<decimal?>("GrossSalary")
                        .IsRequired()
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mobaile")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetSalary")
                        .IsRequired()
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("PersoanalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AngularERPApi.Models.InvoiceType", b =>
                {
                    b.Property<int>("InvoiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceTypeId");

                    b.ToTable("InvoiceType");
                });

            modelBuilder.Entity("AngularERPApi.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerAccuntId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<int>("PrivateMessage")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PublicMessageId")
                        .HasColumnType("int");

                    b.Property<int>("PurchasesId")
                        .HasColumnType("int");

                    b.Property<int>("QuanId")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int>("StoreConvertId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("VendorAccountId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("AngularERPApi.Models.NumberSequence", b =>
                {
                    b.Property<int>("NumberSequenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LastNumber")
                        .HasColumnType("int");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberSequenceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumberSequenceId");

                    b.ToTable("NumberSequence");
                });

            modelBuilder.Entity("AngularERPApi.Models.PrivateMessage", b =>
                {
                    b.Property<int>("PrivateMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime2");

                    b.HasKey("PrivateMessageId");

                    b.HasIndex("UserID");

                    b.ToTable("PrivateMessage", "dbo");
                });

            modelBuilder.Entity("AngularERPApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<string>("ImageProduct")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AngularERPApi.Models.PublicMessage", b =>
                {
                    b.Property<int>("PublicMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime2");

                    b.HasKey("PublicMessageId");

                    b.HasIndex("UserID");

                    b.ToTable("PublicMessage", "dbo");
                });

            modelBuilder.Entity("AngularERPApi.Models.Purchases", b =>
                {
                    b.Property<int>("PurchasesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DeliveryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("Freight")
                        .HasColumnType("float");

                    b.Property<decimal>("PayedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("PurchasesDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("RemainValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("PurchasesId");

                    b.HasIndex("VendorId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("AngularERPApi.Models.PurchasesDetail", b =>
                {
                    b.Property<int>("PurchasesDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(495)
                        .HasColumnType("nvarchar(495)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchasesId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<double>("TaxPercentage")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("PurchasesDetailId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchasesId");

                    b.HasIndex("StoreId");

                    b.ToTable("PurchasesDetail");
                });

            modelBuilder.Entity("AngularERPApi.Models.PurchasesInvoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("InvoiceDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("InvoiceDueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("InvoiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PurchasesDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceTypeId");

                    b.HasIndex("PurchasesDetailId");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchasesInvoice");
                });

            modelBuilder.Entity("AngularERPApi.Models.Sales", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DeliveryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("Freight")
                        .HasColumnType("float");

                    b.Property<decimal>("PayedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("SalesDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("SalesId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("AngularERPApi.Models.SalesDetail", b =>
                {
                    b.Property<int>("SalesDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(495)
                        .HasColumnType("nvarchar(495)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<double>("TaxPercentage")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("SalesDetailId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesId");

                    b.HasIndex("StoreId");

                    b.ToTable("SalesDetail");
                });

            modelBuilder.Entity("AngularERPApi.Models.SalesInvoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("InvoiceDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("InvoiceDueDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("InvoiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SalesDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceTypeId");

                    b.HasIndex("SalesDetailId");

                    b.ToTable("SalesInvoice");
                });

            modelBuilder.Entity("AngularERPApi.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullShipment")
                        .HasColumnType("bit");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ShipmentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ShipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("ShipmentId");

                    b.HasIndex("ShipmentTypeId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("AngularERPApi.Models.ShipmentType", b =>
                {
                    b.Property<int>("ShipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipmentTypeId");

                    b.ToTable("ShipmentType");
                });

            modelBuilder.Entity("AngularERPApi.Models.StoreConvert", b =>
                {
                    b.Property<int>("StoreConvertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ConDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreFromId")
                        .HasColumnType("int");

                    b.Property<int>("StoreToId")
                        .HasColumnType("int");

                    b.HasKey("StoreConvertId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreToId");

                    b.ToTable("StoreConvert");
                });

            modelBuilder.Entity("AngularERPApi.Models.StoreData", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.HasKey("StoreId");

                    b.HasIndex("ProductId");

                    b.ToTable("StoreData");
                });

            modelBuilder.Entity("AngularERPApi.Models.StoreQuantity", b =>
                {
                    b.Property<int>("QuanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("QuanId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreQuantity");
                });

            modelBuilder.Entity("AngularERPApi.Models.UserProfile", b =>
                {
                    b.Property<int>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserProfileId");

                    b.ToTable("UserProfile", "dbo");
                });

            modelBuilder.Entity("AngularERPApi.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Debit")
                        .HasMaxLength(145)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mobaile")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<int>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<int>("VendorTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorId");

                    b.HasIndex("CountryId");

                    b.HasIndex("VendorTypeId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("AngularERPApi.Models.VendorAccount", b =>
                {
                    b.Property<int>("VendorAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatePayed")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(145)
                        .HasColumnType("nvarchar(145)");

                    b.Property<decimal>("PayedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendorAccountId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorAccount");
                });

            modelBuilder.Entity("AngularERPApi.Models.VendorType", b =>
                {
                    b.Property<int>("VendorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorTypeId");

                    b.ToTable("VendorType");
                });

            modelBuilder.Entity("AngularERPApi.Models.Vistor", b =>
                {
                    b.Property<int>("VistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("VistId");

                    b.ToTable("Vistor");
                });

            modelBuilder.Entity("AngularERPApi.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("DelFlage")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreDataStoreId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseId");

                    b.HasIndex("StoreDataStoreId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AngularERPApi.Models.Customer", b =>
                {
                    b.HasOne("AngularERPApi.Models.Country", "Country")
                        .WithMany("Customer")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Customers_Country")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.CustomerType", "CustomerType")
                        .WithMany("Customer")
                        .HasForeignKey("CustomerTypeId")
                        .HasConstraintName("FK_Customers_CustomerType")
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("AngularERPApi.Models.CustomerAccount", b =>
                {
                    b.HasOne("AngularERPApi.Models.Customer", "Customer")
                        .WithMany("CustomerAccount")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Customer_Account_Customer")
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AngularERPApi.Models.Employee", b =>
                {
                    b.HasOne("AngularERPApi.Models.Country", "Country")
                        .WithMany("Employee")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Employees_Country")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Department", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Employees_Department")
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("AngularERPApi.Models.PrivateMessage", b =>
                {
                    b.HasOne("AngularERPApi.Models.ApplicationUser", "Sender")
                        .WithMany("PrivateMessage")
                        .HasForeignKey("UserID");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("AngularERPApi.Models.Product", b =>
                {
                    b.HasOne("AngularERPApi.Models.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Products_Category")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AngularERPApi.Models.PublicMessage", b =>
                {
                    b.HasOne("AngularERPApi.Models.ApplicationUser", "Sender")
                        .WithMany("PublicMessage")
                        .HasForeignKey("UserID");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("AngularERPApi.Models.Purchases", b =>
                {
                    b.HasOne("AngularERPApi.Models.Vendor", "Vendor")
                        .WithMany("Purchases")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Purchases_Vendor")
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("AngularERPApi.Models.PurchasesDetail", b =>
                {
                    b.HasOne("AngularERPApi.Models.Category", "Category")
                        .WithMany("PurchasesDetail")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_PurchasesDetails_Category")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Currency", "Currency")
                        .WithMany("PurchasesDetail")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_PurchasesDetails_Currency")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Product", "Product")
                        .WithMany("PurchasesDetail")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_PurchasesDetails_Product")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Purchases", null)
                        .WithMany("PurchasesDetail")
                        .HasForeignKey("PurchasesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.StoreData", "StoreData")
                        .WithMany("PurchasesDetail")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_PurchasesDetail_StoreData")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Currency");

                    b.Navigation("Product");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("AngularERPApi.Models.PurchasesInvoice", b =>
                {
                    b.HasOne("AngularERPApi.Models.InvoiceType", null)
                        .WithMany("PurchasesInvoice")
                        .HasForeignKey("InvoiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.PurchasesDetail", "PurchasesDetail")
                        .WithMany("PurchasesInvoice")
                        .HasForeignKey("PurchasesDetailId")
                        .HasConstraintName("FK_SalesInvoice_PurchasesDetail")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Vendor", "Vendor")
                        .WithMany("PurchasesInvoice")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_PurchasesInvoice_Vendor")
                        .IsRequired();

                    b.Navigation("PurchasesDetail");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("AngularERPApi.Models.Sales", b =>
                {
                    b.HasOne("AngularERPApi.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Sales_Customer")
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AngularERPApi.Models.SalesDetail", b =>
                {
                    b.HasOne("AngularERPApi.Models.Category", "Category")
                        .WithMany("SalesDetail")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_SalesDetail_Category")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Currency", "Currency")
                        .WithMany("SalesDetail")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_SalesDetail_Currency")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Product", "Product")
                        .WithMany("SalesDetail")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_SalesDetail_Product")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Sales", null)
                        .WithMany("SalesDetail")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.StoreData", "StoreData")
                        .WithMany("SalesDetail")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_SalesDetail_StoreData")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Currency");

                    b.Navigation("Product");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("AngularERPApi.Models.SalesInvoice", b =>
                {
                    b.HasOne("AngularERPApi.Models.Customer", "Customer")
                        .WithMany("SalesInvoice")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_SalesInvoice_Customer")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.InvoiceType", null)
                        .WithMany("SalesInvoice")
                        .HasForeignKey("InvoiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.SalesDetail", "SalesDetail")
                        .WithMany("SalesInvoice")
                        .HasForeignKey("SalesDetailId")
                        .HasConstraintName("FK_SalesInvoice_SalesDetail")
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesDetail");
                });

            modelBuilder.Entity("AngularERPApi.Models.Shipment", b =>
                {
                    b.HasOne("AngularERPApi.Models.ShipmentType", "ShipmentType")
                        .WithMany("Shipment")
                        .HasForeignKey("ShipmentTypeId")
                        .HasConstraintName("FK_Shipment_ShipmentType")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.Warehouse", "Warehouse")
                        .WithMany("Shipment")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK_Shipmen_Warehouse")
                        .IsRequired();

                    b.Navigation("ShipmentType");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AngularERPApi.Models.StoreConvert", b =>
                {
                    b.HasOne("AngularERPApi.Models.Product", "Product")
                        .WithMany("StoreConvert")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_StoreConvert_Product")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.StoreData", "StoreData")
                        .WithMany("StoreConvert")
                        .HasForeignKey("StoreToId")
                        .HasConstraintName("FK_StoreConvert_StoreData_ToId")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("AngularERPApi.Models.StoreData", b =>
                {
                    b.HasOne("AngularERPApi.Models.Product", null)
                        .WithMany("StoreData")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("AngularERPApi.Models.StoreQuantity", b =>
                {
                    b.HasOne("AngularERPApi.Models.Product", "Product")
                        .WithMany("StoreQuantity")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_StoreQuantity_Product")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.StoreData", "StoreData")
                        .WithMany("StoreQuantity")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK_StoreQuantity_StoreData")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StoreData");
                });

            modelBuilder.Entity("AngularERPApi.Models.Vendor", b =>
                {
                    b.HasOne("AngularERPApi.Models.Country", "Country")
                        .WithMany("Vendor")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Vendors_Country")
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.VendorType", "VendorType")
                        .WithMany("Vendor")
                        .HasForeignKey("VendorTypeId")
                        .HasConstraintName("FK_Vendors_VendorType")
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("VendorType");
                });

            modelBuilder.Entity("AngularERPApi.Models.VendorAccount", b =>
                {
                    b.HasOne("AngularERPApi.Models.Vendor", "Vendor")
                        .WithMany("VendorAccount")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_Vendor_Account_Vendor")
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("AngularERPApi.Models.Warehouse", b =>
                {
                    b.HasOne("AngularERPApi.Models.StoreData", null)
                        .WithMany("Warehouse")
                        .HasForeignKey("StoreDataStoreId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AngularERPApi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AngularERPApi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularERPApi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AngularERPApi.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AngularERPApi.Models.ApplicationUser", b =>
                {
                    b.Navigation("PrivateMessage");

                    b.Navigation("PublicMessage");
                });

            modelBuilder.Entity("AngularERPApi.Models.Category", b =>
                {
                    b.Navigation("Product");

                    b.Navigation("PurchasesDetail");

                    b.Navigation("SalesDetail");
                });

            modelBuilder.Entity("AngularERPApi.Models.Country", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("AngularERPApi.Models.Currency", b =>
                {
                    b.Navigation("PurchasesDetail");

                    b.Navigation("SalesDetail");
                });

            modelBuilder.Entity("AngularERPApi.Models.Customer", b =>
                {
                    b.Navigation("CustomerAccount");

                    b.Navigation("Sales");

                    b.Navigation("SalesInvoice");
                });

            modelBuilder.Entity("AngularERPApi.Models.CustomerType", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AngularERPApi.Models.Department", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AngularERPApi.Models.InvoiceType", b =>
                {
                    b.Navigation("PurchasesInvoice");

                    b.Navigation("SalesInvoice");
                });

            modelBuilder.Entity("AngularERPApi.Models.Product", b =>
                {
                    b.Navigation("PurchasesDetail");

                    b.Navigation("SalesDetail");

                    b.Navigation("StoreConvert");

                    b.Navigation("StoreData");

                    b.Navigation("StoreQuantity");
                });

            modelBuilder.Entity("AngularERPApi.Models.Purchases", b =>
                {
                    b.Navigation("PurchasesDetail");
                });

            modelBuilder.Entity("AngularERPApi.Models.PurchasesDetail", b =>
                {
                    b.Navigation("PurchasesInvoice");
                });

            modelBuilder.Entity("AngularERPApi.Models.Sales", b =>
                {
                    b.Navigation("SalesDetail");
                });

            modelBuilder.Entity("AngularERPApi.Models.SalesDetail", b =>
                {
                    b.Navigation("SalesInvoice");
                });

            modelBuilder.Entity("AngularERPApi.Models.ShipmentType", b =>
                {
                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("AngularERPApi.Models.StoreData", b =>
                {
                    b.Navigation("PurchasesDetail");

                    b.Navigation("SalesDetail");

                    b.Navigation("StoreConvert");

                    b.Navigation("StoreQuantity");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("AngularERPApi.Models.Vendor", b =>
                {
                    b.Navigation("Purchases");

                    b.Navigation("PurchasesInvoice");

                    b.Navigation("VendorAccount");
                });

            modelBuilder.Entity("AngularERPApi.Models.VendorType", b =>
                {
                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("AngularERPApi.Models.Warehouse", b =>
                {
                    b.Navigation("Shipment");
                });
#pragma warning restore 612, 618
        }
    }
}
